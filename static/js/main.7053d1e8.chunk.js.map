{"version":3,"sources":["LineGraphMessages.js","TimeHeatMap.js","WordUsage.js","MoreDataElement.js","LandingPage.js","App.js","index.js"],"names":["colors","timeIntervalMap","LineGraphMessages","messages","useState","data","setData","people","setPeople","timeInterval","useEffect","tempTimeStamp","sort","a","b","timestamp_ms","tempGroup","message","name","moment","format","Number","sender_name","push","peopleList","Object","keys","console","log","buildGraph","style","fontWeight","width","height","padding","syncId","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","contentStyle","backgroundColor","color","cursor","strokeWidth","animationDuration","fill","map","o","key","type","dot","activeDot","TimeHeatMap","dayWeekMap","max","forEach","date","dayOfTheWeek","day","timeOfDay","hour","days","num","text","textAlign","count","emojiRegex","WordUsage","totalWordsState","setTotalWords","wordListState","setWordList","emojiListState","setEmojiList","wordsLoaded","setWordsLoaded","emojisLoaded","setEmojisLoaded","setTimeout","totalWords","wordMap","content","length","words","split","word","strippedWord","toLowerCase","replace","wordList","entries","counta","emojiList","emojiWord","utf8","decode","err","match","processWords","display","alignItems","overflowY","overFlowX","maxWidth","pageStart","loadMore","hasMore","loader","className","useWindow","slice","fontSize","emoji","Math","ceil","MoreDataElement","title","borderTop","paddingTop","BasicMessagingStats","averageMessagesPerDay","amountOfTimeTalking","duration","diff","humanize","amountCalled","filter","spentTaling","reduce","call_duration","averageCallDuration","longestCall","find","LandingPage","setAllMessages","value","setValue","ref","useRef","handleMouseOver","handleMouseOut","node","current","addEventListener","removeEventListener","useHover","hoverRef","isHovered","setCount","total","setTotal","threads","addThread","addThreadRaw","thread","i","mergerThreadIndex","findIndex","thread_path","splice","flexDirection","justifyContent","paddingBottom","href","for","transition","id","onChange","event","files","filtered","endsWith","startsWith","file","reader","FileReader","onload","result","json","JSON","parse","readAsText","importData","target","directory","webkitdirectory","App","allMessages","moreData","setMoreData","filteredBasicData","setFilteredBasicData","sortBy","filterBy","items","filters","setFilters","scrolled","setScrolled","divRef","messageSplit","includes","scrollIntoView","behavior","border","borderWidth","borderStyle","paddingLeft","borderRadius","flexWrap","onClick","close","GenerateMessageSplitVisual","open","divider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7053d1e8.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, AreaChart, Area, Brush, ResponsiveContainer} from 'recharts';\nimport moment from 'moment'\nconst colors = [\n  '#72a1e5',\n  '#eca400',\n  '#2e382e',\n  '#9883e5',\n  '#fcd3de',\n  '#f038ff',\n  '#ef709d',\n  '#e2ef70',\n  '#49111c',\n]\n\nconst buildGraph = ({messages, timeInterval})=>{\n  messages = messages.sort((a,b)=>{if(a.timestamp_ms < b.timestamp_ms) return -1; return 1;});\n  let data = [];\n  let tempTimeStamp = messages[0].timestamp_ms;\n  let tempGroup={};\n  let people = { };\n  for(let message of messages){\n    tempGroup[tempTimeStamp]=tempGroup[tempTimeStamp]||{};\n    tempGroup[tempTimeStamp].name = moment(tempTimeStamp).format('MMM YYYY');\n    if(message.timestamp_ms < (Number(tempTimeStamp) + Number(timeInterval))){\n      //normal add\n      tempGroup[tempTimeStamp][message.sender_name] = tempGroup[tempTimeStamp][message.sender_name]+1||1;\n      people[message.sender_name]=0;\n    }else{\n      //finish off the grouping\n\n\n      data.push({...people, ...tempGroup[tempTimeStamp]});\n      tempTimeStamp = tempTimeStamp+timeInterval;\n    }\n  }\n  data.push({...people, ...tempGroup[tempTimeStamp]});\n  let peopleList = Object.keys(people);\n  console.log(data);\n  return {data, peopleList};\n}\n\nconst timeIntervalMap ={\n  'Month':2592000000,\n  'Week':604800000,\n}\n\nexport default function LineGraphMessages({messages}){\n  const [data, setData] = useState([]);\n  const [people, setPeople] = useState([]);\n  const [timeInterval, setTimeInterval] = useState('Month');\n  useEffect(()=>{\n    const {peopleList, data} = buildGraph({messages:messages, timeInterval:timeIntervalMap[timeInterval]});\n    setPeople(peopleList);\n    setData(data);\n  }, [messages])\n  return (\n    <div>\n    <h3 style={{fontWeight:'300'}}>Interactions over time:</h3>\n    <ResponsiveContainer width=\"95%\" height={400}>\n      <LineChart\n        style={{padding:'1rem', fontWeight:'300'}}\n        data={data}\n        syncId=\"main\"\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" stroke='white' />\n        <XAxis dataKey=\"name\" stroke='white' />\n        <YAxis stroke='white'/>\n        <Tooltip contentStyle={{backgroundColor:'white', color:'black'}} cursor={{ stroke: 'white', strokeWidth: 2 }} animationDuration={30} />\n        <Legend />\n        <Brush dataKey=\"name\" data={data} fill=\"#50C9CE\" stroke='white' margin={{ top: 5, right: 30, left: 30, bottom: 5 }}>\n           <LineChart   >\n             {people.map((o,key)=>\n               <Line type=\"monotone\"  dataKey={o} strokeWidth={1} dot={false} activeDot={false} stroke={colors[key]||'black'}  />\n             )}\n           </LineChart>\n        </Brush>\n        {people.map((o,key)=>\n          <Line type=\"monotone\"  dataKey={o} strokeWidth={2} dot={false} activeDot={false} stroke={colors[key]||'black'}  />\n        )}\n      </LineChart>\n    </ResponsiveContainer>\n    </div>\n  );\n}\n","import moment from 'moment'\nexport default function TimeHeatMap ({messages}){\n  let dayWeekMap = {};\n  let max=0;\n  messages.forEach((message)=>{\n    const date = moment(message.timestamp_ms);\n    const dayOfTheWeek = date.day(); //0 is Sunday\n    const timeOfDay = date.hour();\n    dayWeekMap[dayOfTheWeek] = dayWeekMap[dayOfTheWeek] || {};\n    dayWeekMap[dayOfTheWeek][timeOfDay] = dayWeekMap[dayOfTheWeek][timeOfDay]+1 || 1;\n    if(dayWeekMap[dayOfTheWeek][timeOfDay]>max){\n      max=dayWeekMap[dayOfTheWeek][timeOfDay];\n    }\n  })\n  const days = [\n    {num:0, text:'S'},\n    {num:1, text:'M'},\n    {num:2, text:'T'},\n    {num:3, text:'W'},\n    {num:4, text:'T'},\n    {num:5, text:'F'},\n    {num:6, text:'S'},\n  ]\n  const hours = [\n    {num:0, text:'12:00 a.m.'},\n    {num:1, text:'1:00 a.m.'},\n    {num:2, text:'2:00 a.m.'},\n    {num:3, text:'3:00 a.m.'},\n    {num:4, text:'4:00 a.m.'},\n    {num:5, text:'5:00 a.m.'},\n    {num:6, text:'6:00 a.m.'},\n    {num:7, text:'7:00 a.m.'},\n    {num:8, text:'8:00 a.m.'},\n    {num:9, text:'9:00 a.m.'},\n    {num:10, text:'10:00 a.m.'},\n    {num:11, text:'11:00 a.m.'},\n    {num:12, text:'12:00 p.m.'},\n    {num:13, text:'1:00 p.m.'},\n    {num:14, text:'2:00 p.m.'},\n    {num:15, text:'3:00 p.m.'},\n    {num:16, text:'4:00 p.m.'},\n    {num:17, text:'5:00 p.m.'},\n    {num:18, text:'6:00 p.m.'},\n    {num:19, text:'7:00 p.m.'},\n    {num:20, text:'8:00 p.m.'},\n    {num:21, text:'9:00 p.m.'},\n    {num:22, text:'10:00 p.m.'},\n    {num:23, text:'11:00 p.m.'},\n\n  ]\n  return (\n    <div>\n      <h3 style={{fontWeight:'300'}}>Heatmap of Interactions</h3>\n      <table>\n        <tr>\n          <td/>\n          {days.map(day=><td style={{textAlign:'center'}}>{day.text}</td>)}\n        </tr>\n        {hours.map(hour=>\n          <tr>\n            <td>{hour.text}</td>\n            {days.map(day=>{\n              let count = 0;\n              if(dayWeekMap[day.num] && dayWeekMap[day.num][hour.num]) count = dayWeekMap[day.num][hour.num];\n              return(\n              <td style={{backgroundColor: `rgba(239, 112, 157, ${count/max})`, padding:'.5rem 1rem .5rem 1rem'}}>\n\n              </td>)\n            }\n            )}\n          </tr>\n        )}\n      </table>\n    </div>\n  )\n}\n","import {useState, useEffect} from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport moment from 'moment'\nimport utf8 from 'utf8';\n\nconst emojiRegex = /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g;\n\nconst processWords = ({messages})=>{\n  let totalChars = 0;\n  let totalWords = 0;\n  let wordMap = {};\n  messages.forEach(message=>{\n    totalChars += message.content?.length||0;\n    let words = message.content?.split(' ') || [];\n    totalWords += words.length;\n    words.forEach(word=>{\n      let strippedWord = word.toLowerCase().replace('.','').replace(',','').replace('?','');\n      if(strippedWord){\n          wordMap[strippedWord]=wordMap[strippedWord]+1||1\n      }\n    })//adds one to a word or maes new one\n  })\n  let wordList = Object.entries(wordMap);\n  wordList.sort(([worda,counta],[wordb,countb])=>{if(counta>countb)return-1; return 1});\n  let emojiList = [];\n  wordList.forEach(([word, count])=>{\n    let emojiWord=word;\n    try{\n      emojiWord = utf8.decode(word)\n    }catch(err){\n      //do nothing\n    }\n    if(emojiWord.match(emojiRegex)){\n      emojiList.push([emojiWord,count]);\n    }\n  })\n  return {totalWords, wordList, emojiList}\n}\n\nexport default function WordUsage({messages}){\n  const [totalWordsState, setTotalWords] = useState(0);\n  const [wordListState, setWordList] = useState([]);\n  const [emojiListState, setEmojiList] = useState([]);\n  const [wordsLoaded, setWordsLoaded] = useState(10);\n  const [emojisLoaded, setEmojisLoaded] = useState(10);\n  useEffect(()=>{\n    setTimeout(()=>{\n      const {totalWords, wordList, emojiList} = processWords({messages});\n      setWordList(wordList);\n      setTotalWords(totalWords);\n      setEmojiList(emojiList);\n    },200)\n  }, [messages])\n\n\n  return (\n    <div style={{display:'flex', alignItems:'center'}}>\n\n      <div style={{width:'50%', padding:'1rem'}}>\n        <h3 style={{fontWeight:'300'}}>Here are your most popular words:</h3>\n        <div style={{height:'200px', width:'100%', overflowY:'auto', overFlowX:'hidden', margin:'1rem', maxWidth:'400px'}}>\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={()=>{setWordsLoaded(wordsLoaded+10)}}\n            hasMore={wordsLoaded<wordListState.length}\n            loader={<div className=\"loader\" key={0}>Loading ...</div>}\n            useWindow={false}\n          >\n          {wordListState.slice(0, wordsLoaded).map(([word,count],key)=><div style={{fontSize:'1.25rem'}}>\n            {key+1}. <span style={{color:'#EF709D'}}>{word}</span>, <span style={{fontWeight:'200'}}>{count} times</span>\n          </div>)}\n          </InfiniteScroll>\n        </div>\n        <h3 style={{fontWeight:'300'}}>Here are your most popular emojis:</h3>\n        <div style={{height:'200px', width:'100%', overflowY:'auto', overFlowX:'hidden', margin:'1rem', maxWidth:'400px'}}>\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={()=>{setEmojisLoaded(emojisLoaded+10)}}\n            hasMore={emojisLoaded<emojiListState.length}\n            loader={<div className=\"loader\" key={0}>Loading ...</div>}\n            useWindow={false}\n          >\n          {emojiListState.slice(0, emojisLoaded).map(([emoji,count],key)=><div style={{fontSize:'1.25rem'}}>\n            {key+1}. {emoji}, <span style={{fontWeight:'200'}}>{count} times</span>\n          </div>)}\n          </InfiniteScroll>\n        </div>\n      </div>\n      <div style={{width:'50%', padding:'1rem'}}>\n        <h3 style={{fontWeight:'300'}}>Word usage:</h3>\n        <div style={{fontSize:'2rem', fontWeight:'300'}}>\n          You have said <span style={{color:'#EF709D'}}>{totalWordsState}</span> words to each other.\n          Each message has an average length of <span style={{color:'#EF709D'}}>{Math.ceil(totalWordsState/messages.length)}</span> words.\n        </div>\n      </div>\n    </div>\n  )\n}\n","import {useState, useEffect} from 'react';\nimport LineGraphMessages from './LineGraphMessages';\nimport TimeHeatMap from './TimeHeatMap';\nimport WordUsage from './WordUsage';\nimport moment from 'moment'\n\nexport default function MoreDataElement({data}){\n  return (\n    <div style={{width:'50%', backgroundColor:'#50C9CE', color:'white', height:'100vh', overflowY:'auto'}}>\n      <div style={{padding:'2rem'}}>\n        <h1 style={{padding:'1rem', fontWeight:'100', textAlign:'center', fontSize:'3rem'}}>Stats for {data.title}:</h1>\n        <hr style={{borderTop: '1px solid white'}}/>\n        {data?.messages?(\n          <>\n          <LineGraphMessages messages={data.messages}/>\n          <div style={{display:'flex', paddingTop:'3rem', alignItems:'center'}}>\n            <div style={{width:'50%', padding:'1rem'}}>\n              <BasicMessagingStats messages={data.messages}/>\n            </div>\n            <div style={{width:'50%', padding:'1rem'}}>\n              <TimeHeatMap messages={data.messages}/>\n            </div>\n          </div>\n          <WordUsage messages={data.messages}/>\n\n\n          </>\n        ):(<></>)}\n      </div>\n    </div>\n  )\n}\n\nfunction BasicMessagingStats ({messages}){\n  messages = messages.sort((a,b)=>{if(a.timestamp_ms < b.timestamp_ms) return -1; return 1;});\n  let data = [];\n  const averageMessagesPerDay = Math.ceil(messages.length/((messages[messages.length-1].timestamp_ms-messages[0].timestamp_ms)/86400000))\n  const amountOfTimeTalking = moment.duration(moment(messages[messages.length-1].timestamp_ms).diff(moment(messages[0].timestamp_ms))).humanize();\n  const amountCalled = messages.filter(o=>o.type==='Call').length;\n  const spentTaling = moment.duration(moment(messages.filter(o=>o.type==='Call').reduce((a, b) => a + b.call_duration, 0)*1000).diff(moment(0))).humanize();\n  const averageCallDuration = moment.duration(moment(messages.filter(o=>o.type==='Call').reduce((a, b) => a + b.call_duration, 0)*1000/amountCalled).diff(moment(0))).humanize();\n  const longestCall = moment.duration(moment(Math.max(...messages.filter(o=>o.type==='Call').map(o=>o.call_duration))*1000).diff(moment(0))).humanize();\n  return (<div style={{fontSize:'2rem', fontWeight:'300'}}>\n    You have spent <span style={{color:'#EF709D'}}>{amountOfTimeTalking}</span> interacting with each other, sharing an average of about <span style={{color:'#EF709D'}}>{averageMessagesPerDay}</span> interactions a day\n    <br/>\n    <br/>\n    {messages.find(o=>o.type==='Call')?(<>You have called each other <span style={{color:'#EF709D'}}>{amountCalled}</span> times, averaging <span style={{color:'#EF709D'}}>{averageCallDuration}</span> each time and about <span style={{color:'#EF709D'}}>{spentTaling}</span> in total\n    <br/>One time you spoke for <span style={{color:'#EF709D'}}>{longestCall}</span></>\n\n  ):(<>You have never called each other</>)}\n  </div>)\n}\n","import {useState, useEffect, useRef} from 'react';\n\nconst importData = ({files, setCount, addThreadRaw, setTotal}) =>{\n  let filtered = [...files].filter(o => o.name.endsWith('.json')).filter(o=>o.name.startsWith('message_'))\n  setTotal(filtered.length);\n  filtered.forEach((file,key)=>{\n    let reader = new FileReader();\n    reader.onload = async (event)=>{\n      setTimeout(()=>{\n        let data = reader.result;\n        let json = JSON.parse(data);\n        addThreadRaw(json);\n        setCount(key+1);\n      },10)\n\n    }\n    reader.readAsText(file)\n  })\n}\nexport default function LandingPage({setAllMessages}){\n  const [hoverRef, isHovered] = useHover();\n  const [count, setCount] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [threads, addThread] = useState([]);\n  let rawThreads = [];\n  const addThreadRaw = (thread) =>{ //like a reducer to not have reflows\n    addThread(threads=>[...threads, thread]);\n  }\n\n  useEffect(()=>{\n    if(count===total){\n      for(let i=0; i<threads.length;i++){\n        let thread = threads[i];\n        let mergerThreadIndex = threads.findIndex((o, key)=>o.thread_path === thread.thread_path && key!==i)\n        if(mergerThreadIndex&&mergerThreadIndex!==-1){\n          threads[mergerThreadIndex] = {...threads[mergerThreadIndex], messages:[...threads[mergerThreadIndex].messages, ...thread.messages]}\n          threads.splice(i, 1);\n          i=i-1;\n        }\n      }\n      setAllMessages(threads);\n    }\n  },[count, total, threads])\n  return (\n    <div style={{backgroundColor:'#50C9CE', color:'white', display:'flex', flexDirection:'column', alignItems:'center', justifyContent:'space-around', height:'100vh'}}>\n      <div style={{textAlign:'center', maxWidth:'50%'}}>\n        <h1 style={{fontWeight:'300', padding:'3rem 3rem 1rem 3rem'}}>Hello, and Welcome to <span style={{color:'#EF709D'}}>Facebook Messenger Viz</span></h1>\n\n          <h4 style={{fontWeight:'300', }}>This site takes all of your past information, crunches it and provides some interesting stats. Don't worry -- it's safe and secure. Everything is run on your computer, and I never store anything related to you. You can check my opensource code if you want to make sure, or ask your grandson if he thinks its safe.</h4>\n\n      </div>\n\n      <div style={{ maxWidth:'50%', paddingBottom:'8rem', alignItems:'center', flexDirection:'column',display:'flex'}}>\n        <h2 style={{textAlign:'center'}}>Let's get started!</h2>\n        <h3 style={{fontWeight:'300', padding:'0rem 0rem 4rem 0rem'}}>\n          <ol>\n            <li>Download Facebook Data: Go to <a href='https://www.facebook.com/dyi/'>https://www.facebook.com/dyi/</a></li>\n            <li>Select: DateRange: All time, Format: JSON, Media Quality: High</li>\n            <li>Select the Deselect all button</li>\n            <li>Click only on messages</li>\n            <li>Hit the Create File button</li>\n            <li>Wait a day or two</li>\n            <li>Return to <a href='https://www.facebook.com/dyi/'>https://www.facebook.com/dyi/</a> and download</li>\n            <li>Unzip the file: It will be a single zip with two zips inside of it.</li>\n            <li>Unzip the second zip (doesn't have photos in the photos folder)</li>\n            <li>Upload the messages folder below!</li>\n          </ol>\n        </h3>\n        <div>\n          <label for=\"file\" style={{cursor:'pointer', color:'white', backgroundColor:isHovered?('grey'):('#EF709D'), padding:'1rem', fontWeight:'200', transition:'250ms'}} ref={hoverRef}>Upload</label>\n          <input id=\"file\" type=\"file\" name=\"file\" style={{display:'none'}}onChange={(event)=>{importData({files:event.target.files, setCount, addThreadRaw, setTotal})}} directory=\"\" webkitdirectory=\"\"/>\n\n        </div>\n        <div>\n        {total!==0&&\n          <h2 style={{textAlign:'center', fontWeight:'300', padding:'2rem'}}>\n            <span style={{color:'#EF709D'}}>{count}</span> / {total}\n          </h2>\n        }\n        </div>\n      </div>\n\n    </div>\n  )\n}\nfunction useHover() {\n  const [value, setValue] = useState(false);\n\n  const ref = useRef(null);\n\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener('mouseover', handleMouseOver);\n        node.addEventListener('mouseout', handleMouseOut);\n\n        return () => {\n          node.removeEventListener('mouseover', handleMouseOver);\n          node.removeEventListener('mouseout', handleMouseOut);\n        };\n      }\n    },\n    [ref.current] // Recall only if ref changes\n  );\n\n  return [ref, value];\n}\n","import {useState, useEffect, useRef} from 'react';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport MoreDataElement from './MoreDataElement';\nimport LandingPage from './LandingPage.js';\n\nexport default function App() {\n  const [allMessages, setAllMessages] = useState([])\n  const [moreData, setMoreData] = useState(false);\n  const [filteredBasicData, setFilteredBasicData] = useState([]);\n  const [filters, setFilters] = useState({sortBy: {count:true}, filterBy:'', items:10})\n  const [scrolled, setScrolled] = useState(false);\n  const divRef = useRef(null);\n  useEffect(()=>{\n    let newData = allMessages.map(data=>{\n      let messageSplit = {};\n      data.messages.forEach(o=>{messageSplit[o.sender_name]=messageSplit[o.sender_name]+1|| 1})\n      return {\n        ...data,\n        count: data.messages.length,\n        messageSplit,\n      }\n    })\n    let sorted = newData.sort((a,b)=>{\n      if(filters.sortBy.count){\n        if(a.count > b.count) return -1;\n        return 1;\n      }else{\n        return 0;\n      }\n    })\n    let filtered = sorted.filter(o=>o?.title?.toLowerCase()?.includes(filters.filterBy.toLowerCase()))\n    setFilters({...filters, items:10})\n    setFilteredBasicData(filtered)\n\n\n    if(!scrolled && filtered.length>0){\n      setScrolled(true)\n      divRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n  }, [allMessages, filters.sortBy, filters.filterBy])\n\n  return (\n    <>\n      <LandingPage setAllMessages={setAllMessages}/>\n\n      {allMessages&&\n        <div style={{display:'flex'}}>\n          <div style={{width:'50%', height:'100vh'}} ref={divRef}>\n            <div style={{ padding:'2rem', height:'90%'}}>\n              <input\n                style={{border: '#EF709D', borderWidth: '1px', borderStyle: 'solid', height: '1.5rem', paddingLeft: '1rem', borderRadius: '1rem'}}\n                type=\"text\"\n                name=\"search\"\n                value={filters.filterBy}\n                onChange={(event)=>{setFilters({...filters, filterBy:event.target.value})}}\n              />\n              <div style={{overflowY:'auto', height:'100%'}}>\n                <InfiniteScroll\n                  pageStart={0}\n                  loadMore={()=>{setFilters({...filters, items:filters.items+10})}}\n                  hasMore={filters.items<filteredBasicData.length}\n                  loader={<></>}\n                  style={{display:'flex', flexWrap: 'wrap'}}\n                  useWindow={false}\n                >\n                {filteredBasicData.slice(0, filters.items).map(({title,messageSplit,count, id}, key)=>\n                <div\n                  style={{backgroundColor:'#9883E5', width:'10rem', margin:'1rem', padding:'1rem', color:'white', display:'flex', justifyContent:'space-between',  flexDirection:'column', cursor:'pointer'}}\n                  onClick={()=>{setMoreData(filteredBasicData[key])}}\n                >\n                  <div>\n                    <h3>{title}</h3>\n\n                    <div style={{paddingTop:'1rem'}}>\n                      <p>Total messages:</p>\n                      <h2 style={{fontWeight:'100', padding:'1rem', textAlign:'center'}}>{count}</h2>\n                    </div>\n                  </div>\n                  <GenerateMessageSplitVisual messageSplit={messageSplit} count={count}/>\n                </div>)}\n                </InfiniteScroll>\n              </div>\n            </div>\n            <div style={{textAlign:'center'}}>Made with ❤️ by <a href='www.lucolsthoorn.com'>Luc Olsthoorn</a></div>\n          </div>\n          {!!moreData?(<MoreDataElement data={moreData} close={()=>{setMoreData(false)}}/>):(<></>)}\n        </div>\n      }\n    </>\n  );\n}\n\nconst GenerateMessageSplitVisual = ({messageSplit, count}) =>{\n  const [open, setOpen] = useState(false);\n  let width = 6;\n  let divider = count/width;\n  return(\n    <div style={{height: open?('100%'):('5rem'), overflowY:'auto'}}>\n      {Object.keys(messageSplit).sort((a,b)=>{if(messageSplit[a] > messageSplit[b]){return -1} return 1}).map(o=>\n        <div style={{display:'flex', alignItems:'center', justifyContent:'space-between', margin:'.25rem'}}>\n          <div style={{width:`${messageSplit[o]/divider}rem`, backgroundColor:'#50C9CE', height:'1.25rem'}} >\n          </div>\n          <div style={{fontSize:'.75rem'}}>{o}</div>\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}